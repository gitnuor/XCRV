@using XCRV.Domain.Entities

@model TransactionDetails
@{
    ViewData["Title"] = "BBL - XCRV360 : ATM Transaction";
    Layout = "~/Views/Shared/Template/_Layout.cshtml";
}

<style>
    .form-check {
        padding-left: 0rem !important;
    }

    .dropdown-menu {
        /*  position: absolute;
                                                        top: 100%;
                                                        left: 0;*/
        z-index: 1035;
    }

</style>

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Customer</a></li>
                    <li class="breadcrumb-item active">ATM Transaction</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<div class="content">
    <div class="container-fluid">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title">ATM Transaction</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                <form class="form-horizontal">
                    <div class="card-body">
                        <div class="row" style="margin-top: -25px;margin-left: -25px;">

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label style="font-size:14px">ATM Card No</label>
                                    <div class='input-group'>
                                        @* <input type="text" id="txtFromDate" class="form-control singledate" />*@
                                        <input type="text" class="form-control" id="txtSearchString" value="@ViewBag.Accno" />
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label style="font-size:14px">From Date</label>
                                    <div class='input-group' id="inputfrm">
                                        <input type="text" id="txtFromDate" class="form-control singledate" />
                                        <div class="input-group-append" id="datepicker1">
                                            <label for="txtFromDate" class="input-group-text">
                                                <span class="fa fa-calendar"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label style="font-size:14px">To Date</label>
                                    <div class='input-group'>
                                        <input type="text" id="txtToDate" class="form-control singledate" />
                                        <div class="input-group-append" id="datepicker2">
                                            <label for="txtToDate" class="input-group-text">
                                                <span class="fa fa-calendar"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <div class='input-group'>
                                        <button id="btnSearch" type="button" class="btn btn-primary" value="Insert"><span id="btnText">View Transaction</span></button>
                                    </div>
                                </div>
                            </div>


                        </div>

                    </div>
                </form>

                @*  <div class="row h-100 justify-content-left">
                    <div class="col-md-8">
                    <div class="form-group row">
                    <div class="col-12 table-responsive-sm">
                    <table class="table smallfrontTable" id="custLimitInfo">
                    <tr>
                    <th>Name :</th>
                    <td><label id="cust_name" class="font-weight-normal"></label></td>

                    </tr>

                    <tr>
                    <th>Current Available Balance :</th>
                    <td><label id="aval_balance" class="font-weight-normal"></label></td>

                    </tr>
                    </table>
                    </div>
                    </div>
                    </div>

                    </div>
                *@

                <div class="row">
                    <div class="col-md-12" id="divtbl">
                        <table id="AtmDetail" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Transaction Particular</th>
                                    <th>Remarks</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /.card-body -->
            <div class="card-footer">
            </div>
        </div>

    </div><!-- /.container-fluid -->
</div><!-- /.contant -->
@section ScriptSection
{

<!-- DataTables  & Plugins -->
<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>
<script src="~/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
<script src="~/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
<script src="~/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
<script src="~/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
<script src="~/plugins/jszip/jszip.min.js"></script>
<script src="~/plugins/pdfmake/pdfmake.min.js"></script>
<script src="~/plugins/pdfmake/vfs_fonts.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.print.min.js"></script>
<script src="~/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>



<script>
     @if (TempData.ContainsKey("ErrorMessage"))
    {
        @:toastr.error('@TempData["ErrorMessage"]');
    };

                              $(function () {
                                 $('#txtFromDate').datepicker({
                                     changeMonth: true,
                                     changeYear: true,
                                     format: "dd-M-yyyy",
                                     language: "tr",
                                     autoclose: true
                                 });
                             });

                              $(function () {
                                 $('#txtToDate').datepicker({
                                     changeMonth: true,
                                     changeYear: true,
                                     format: "dd-M-yyyy",
                                     language: "tr",
                                     autoclose: true
                                 });
                             });

        $(function(){
         $("#tranchk").change(function() {
             if($(this).is(":checked")) {
                   $("#txtFromDate").datepicker("setDate", new Date());
                   $("#txtToDate").datepicker("setDate", new Date());
                   $('#txtFromDate').prop('disabled', true);
                   $('#txtToDate').prop('disabled', true);
                   $('#datepicker1').hide();
                   $('#datepicker2').hide();

             }
             else {
                  $("#txtFromDate").val('');
                  $("#txtToDate").val('');
                  $('#txtFromDate').prop('disabled', false);
                  $('#txtToDate').prop('disabled', false);
                  $('#datepicker1').show();
                  $('#datepicker2').show();
             }

         });

     })

                       $(document).on('click', '#btnSearch',  function () {
                             debugger;
                                 let seachString = $("#txtSearchString").val();
                                 let FromDate = $('#txtFromDate').val();
                                 let ToDate = $('#txtToDate').val();

                                 var startDate= $('#txtFromDate').val();
                                 var endDate=$('#txtToDate').val();
                                 var start = new Date(startDate);
                                 var end = new Date(endDate);
                                 var diffDate = Math.abs(end - start) / (1000 * 60 * 60 * 24);
                                 var days = Math.round(diffDate);
                                 var myRegEx = new RegExp('[0-9]+');
                                 if (days> 30 || days==myRegEx)
                                 {                                  
                                    $('#divtbl').hide();                             
                                   toastr.error('Date range cannot be bigger than one month(30 days).');
                                 }
                                 else{
                                     $('#divtbl').show();
                                     loadTranDetail(seachString, FromDate,ToDate);
                                 }
                                 
                             });

                       function loadCustometBal(seachString,FromDate,ToDate) {

                             $.ajax({
                                 type: 'GET',
                                 url: '/AccountTransaction/getCustomerBal',
                                 contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                 data: {accno:seachString,FromDate:FromDate,ToDate:ToDate},
                                 success: function (result) {
                                  if (result != null) {
                                         $('#aval_balance').text(result.data.clr_bal_amt);

                                     } else {
                                         alert("Something went wrong");
                                     }
                                 }
                                // ,
                                // error: function () {
                                //     alert('Failed to receive the Data');
                                //     console.log('Failed ');
                                //}

                        });
                        }


                        function loadCustometName(seachString,FromDate,ToDate) {

                             $.ajax({
                                 type: 'GET',
                                 url: '/AccountTransaction/getCustomerName',
                                 contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                 data: {accno:seachString,FromDate:FromDate,ToDate:ToDate},
                                 success: function (result) {
                                  if (result != null) {
                                          $('#cust_name').text(result.data.acct_name);

                                     } else {
                                         alert("Something went wrong");
                                     }
                                 }
                                // ,
                                // error: function () {
                                //     alert('Failed to receive the Data');
                                //     console.log('Failed ');
                                //}

                        });
                        }


                             $('#AtmDetail').DataTable({
                                 "filter": false,
                                 "paging": true,
                                 "pageLength": 10,
                                 "lengthChange": false,
                                 "pagingType": "full_numbers",
                                 "scrollX": false,
                                 "autoWidth": false,
                                 "initComplete": function (settings, json) {
                                           $("#AtmDetail").wrap("<div style='overflow:auto; width:100%;position:relative;'></div>");
                                              },
                                     });


                        function loadTranDetail(seachString,FromDate,ToDate) {
                            //debugger;
                                 $('#AtmDetail').DataTable().destroy();

                                 $('#AtmDetail').DataTable({
                                     "processing": true,
                                     "language": {
                                         processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span> '
                                     },
                                     "filter": false,
                                     "paging": true,
                                     "pageLength": 10,
                                     "lengthChange": false,
                                     "pagingType": "full_numbers",
                                     "scrollX": true,
                                     "autoWidth": false,

                                     "ajax": {
                                         "url": "/ATMTransaction/getATMTransactionDetails",
                                         "dataSrc": function (d) {
                                               if (d.data.length === 0) {
                                                 var settings = $('#AtmDetail').DataTable().settings()[0];
                                                 settings.oLanguage.sEmptyTable = d.message;
                                          }
                                             return d.data;
                                        },
                                         "data": {cardno:seachString,FromDate:FromDate,ToDate:ToDate},
                                         "type": "GET",
                                         "dataType": "json"
                                     },
                                     "columns": [
                                         { "data": "tran_date", "name": "tran_date" },
                                         { "data": "tran_particular", "name": "tran_particular" },
                                         { "data": "tran_rmks", "name": "tran_rmks" },
                                         { "data": "tran_amt", "name": "tran_amt" },

                                     ]
                                 });
                                  $("#AtmDetail").wrap('<div style="overflow:auto;" />');

    }

     function days_between(date1, date2) {

            // The number of milliseconds in one day
            var ONE_DAY = 1000 * 60 * 60 * 24

            // Convert both dates to milliseconds
            var date1_ms = date1.getTime()
            var date2_ms = date2.getTime()

            // Calculate the difference in milliseconds
            var difference_ms = Math.abs(date1_ms - date2_ms)

            // Convert back to days and return
            return Math.round(difference_ms/ONE_DAY)

        }

</script>


}
